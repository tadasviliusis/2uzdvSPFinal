
package lt.viko.eif.tviliusis;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.bind.annotation.*;
import jakarta.xml.ws.*;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ShopPortService", targetNamespace = "http://spring.io/guides/gs-producing-web-service", wsdlLocation = "http://localhost:8080/ws/shop.wsdl")
public class ShopPortService
    extends Service
{

    private final static URL SHOPPORTSERVICE_WSDL_LOCATION;
    private final static WebServiceException SHOPPORTSERVICE_EXCEPTION;
    private final static QName SHOPPORTSERVICE_QNAME = new QName("http://spring.io/guides/gs-producing-web-service", "ShopPortService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/ws/shop.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SHOPPORTSERVICE_WSDL_LOCATION = url;
        SHOPPORTSERVICE_EXCEPTION = e;
    }

    public ShopPortService() {
        super(__getWsdlLocation(), SHOPPORTSERVICE_QNAME);
    }

    public ShopPortService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SHOPPORTSERVICE_QNAME, features);
    }

    public ShopPortService(URL wsdlLocation) {
        super(wsdlLocation, SHOPPORTSERVICE_QNAME);
    }

    public ShopPortService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SHOPPORTSERVICE_QNAME, features);
    }

    public ShopPortService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ShopPortService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ShopPort
     */
    @WebEndpoint(name = "ShopPortSoap11")
    public ShopPort getShopPortSoap11() {
        return super.getPort(new QName("http://spring.io/guides/gs-producing-web-service", "ShopPortSoap11"), ShopPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ShopPort
     */
    @WebEndpoint(name = "ShopPortSoap11")
    public ShopPort getShopPortSoap11(WebServiceFeature... features) {
        return super.getPort(new QName("http://spring.io/guides/gs-producing-web-service", "ShopPortSoap11"), ShopPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SHOPPORTSERVICE_EXCEPTION!= null) {
            throw SHOPPORTSERVICE_EXCEPTION;
        }
        return SHOPPORTSERVICE_WSDL_LOCATION;
    }

}
